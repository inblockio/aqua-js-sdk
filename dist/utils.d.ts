import { AnObject, AquaObject, CredentialsData, GasEstimateResult } from './types';
import { HDNodeWallet } from "ethers";
export declare function maybeUpdateFileIndex(aquaObject: AquaObject, verificationData: any, revisionType: string, aquaFileName: string, formFileName: string): AquaObject;
export declare function dict2Leaves(obj: AnObject): string[];
export declare function getFileHashSum(fileContent: string): string;
export declare function getHashSum(data: string | Buffer): string;
export declare function createNewAquaObject(): AquaObject;
export declare function checkFileHashAlreadyNotarized(fileHash: string, aquaObject: AquaObject): boolean;
export declare function prepareNonce(): string;
export declare function getWallet(mnemonic: string): [HDNodeWallet, string, string];
export declare function createCredentials(): CredentialsData;
export declare function formatMwTimestamp(ts: string): string;
export declare const estimateWitnessGas: (wallet_address: string, witness_event_verification_hash: string, ethNetwork: string, smart_contract_address: string, providerUrl: string) => Promise<GasEstimateResult>;
export declare const getLatestVH: (aquaObject: AquaObject) => string;
export declare const getTimestamp: () => string;
